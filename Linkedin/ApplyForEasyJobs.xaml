<Activity mc:Ignorable="sap sap2010" x:Class="ApplyForEasyJobs1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_LinkedInBrowser" Type="InArgument(ui:Browser)" />
  </x:Members>
  <this:ApplyForEasyJobs1.in_LinkedInBrowser>
    <InArgument x:TypeArguments="ui:Browser" />
  </this:ApplyForEasyJobs1.in_LinkedInBrowser>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>798,1452</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ApplyForEasyJobs1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="28">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="808,1387" sap2010:WorkflowViewState.IdRef="Sequence_14">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch sap2010:Annotation.AnnotationText="Try excuting the workflow and catch any known or unknown that may happen, log the exception then end the automation as this is a vital step for the rest of the automation" DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="766,1295" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="ui:Browser" Name="LinkedInBrowser" />
      </TryCatch.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Flowchart sap2010:Annotation.AnnotationText="Get the list of easy apply jobs from queue and apply to each one of them then save a report for Succeed and Failed Jobs&#xA;&#xA;Pre: Logged into LinkedIn - on last page of search results&#xA;Post: Logged into LinkedIn - on last job processed" DisplayName="ApplyForEasyJobs" sap:VirtualizedContainerService.HintSize="728,1026" sap2010:WorkflowViewState.IdRef="Flowchart_1">
          <Flowchart.Variables>
            <Variable x:TypeArguments="ui:QueueItem" Name="JobDetail" />
            <Variable x:TypeArguments="x:Int32" Default="0" Name="JobsCount" />
            <Variable x:TypeArguments="x:Int32" Default="0" Name="SucceedJobsCount" />
            <Variable x:TypeArguments="x:Int32" Default="0" Name="FailedJobsCount" />
            <Variable x:TypeArguments="sd:DataTable" Name="ReportDataTable" />
          </Flowchart.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
              <av:Size x:Key="ShapeSize">60,75</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,154.5</av:PointCollection>
              <x:Double x:Key="Height">917.5</x:Double>
              <x:Double x:Key="Width">694</x:Double>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Flowchart.StartNode>
            <x:Reference>__ReferenceID6</x:Reference>
          </Flowchart.StartNode>
          <FlowStep x:Name="__ReferenceID0">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">200,339</av:Point>
                <av:Size x:Key="ShapeSize">200,94</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">300,433 300,496.5</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Get the Job detail from &quot;EasyApplyJobs&quot; Queue and save the item to &quot;JobDetail&quot; variable" DisplayName="Get Transaction Item - &quot;JobDetail&quot;" sap:VirtualizedContainerService.HintSize="200,94" sap2010:WorkflowViewState.IdRef="GetQueueItem_1" QueueType="EasyApplyJobs" TransactionItem="[JobDetail]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:GetQueueItem>
            <FlowStep.Next>
              <FlowDecision x:Name="__ReferenceID1" sap2010:Annotation.AnnotationText="If there is new item" Condition="[JobDetail IsNot Nothing]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <av:Point x:Key="ShapeLocation">260.5,496.5</av:Point>
                    <av:Size x:Key="ShapeSize">79,87</av:Size>
                    <av:PointCollection x:Key="TrueConnector">260.5,540 151,540 151,612.5</av:PointCollection>
                    <av:PointCollection x:Key="FalseConnector">339.5,540 470,540 470,609</av:PointCollection>
                    <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <FlowDecision.True>
                  <FlowStep x:Name="__ReferenceID5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">20,612.5</av:Point>
                        <av:Size x:Key="ShapeSize">262,102</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">151,714.5 151,764.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap2010:Annotation.AnnotationText="Increase the &quot;JobsCount&quot; variable by one to count the total number of jobs" DisplayName="Assign - &quot;JobsCount&quot;" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_4">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[JobsCount]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[JobsCount + 1]</InArgument>
                      </Assign.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </Assign>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID2">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">51,764.5</av:Point>
                            <av:Size x:Key="ShapeSize">200,153</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">51,841 0,841 0,386 200,386</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:BrowserScope SearchScope="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Attach the opened Browser (Chrome) at the &quot;LinkedIn&quot; received from the in_LinkedInBrowser and save it to the LinkedInBrowser variable" Browser="[in_LinkedInBrowser]" BrowserType="Chrome" DisplayName="Attach Browser - Chrome &quot;LinkedIn&quot;" sap:VirtualizedContainerService.HintSize="1966,8454" sap2010:WorkflowViewState.IdRef="BrowserScope_1" UiBrowser="[LinkedInBrowser]">
                          <ui:BrowserScope.Body>
                            <ActivityAction x:TypeArguments="x:Object">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1932,8315" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Default="0" Name="progress" />
                                  <Variable x:TypeArguments="x:Boolean" Name="QuestionsExist" />
                                  <Variable x:TypeArguments="x:Boolean" Name="JobExist" />
                                  <Variable x:TypeArguments="x:String" Name="URL" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="FailureReportDataTable" />
                                  <Variable x:TypeArguments="sd:DataTable" Name="SuccessReportDataTable" />
                                  <Variable x:TypeArguments="x:String" Name="CompanyName" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:BuildDataTable sap2010:Annotation.AnnotationText="Build The failure report datatable and save it to &quot;FailureReportDataTable&quot; variable" DataTable="[FailureReportDataTable]" DisplayName="Build Data Table - Failure Report" sap:VirtualizedContainerService.HintSize="1890,101" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Job_x0020_Title&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;URL&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Reason&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:BuildDataTable>
                                <ui:BuildDataTable sap2010:Annotation.AnnotationText="Build The success report datatable and save it to &quot;SuccessReportDataTable&quot; variable" DataTable="[SuccessReportDataTable]" DisplayName="Build Data Table - Success Report" sap:VirtualizedContainerService.HintSize="1890,101" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Job_x0020_Title&quot; msdata:Caption=&quot;&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;URL&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Company_x0020_Name&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Apply_x0020_Date&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:BuildDataTable>
                                <Assign sap2010:Annotation.AnnotationText="Assign the Job URL to the &quot;URL&quot; variable" DisplayName="Assign - &quot;URL&quot;" sap:VirtualizedContainerService.HintSize="1890,91" sap2010:WorkflowViewState.IdRef="Assign_1">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[URL]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["https://www.linkedin.com" +JobDetail.SpecificContent("URL").ToString]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                                <ui:NavigateTo sap2010:Annotation.AnnotationText="Navigate to job page using the &quot;URL&quot; variable" Browser="[in_LinkedInBrowser]" DisplayName="Navigate To - Job Page" sap:VirtualizedContainerService.HintSize="1890,90" sap2010:WorkflowViewState.IdRef="NavigateTo_1" Url="[URL]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:NavigateTo>
                                <ui:UiElementExists sap2010:Annotation.AnnotationText="Check if &quot;Easy Apply&quot; Button exist in the attached browser and save the result in the &quot;JobExist&quot; Boolean variable" DisplayName="Element Exists - &quot;Easy Apply&quot; Button" Exists="[JobExist]" sap:VirtualizedContainerService.HintSize="1890,163" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
                                  <ui:UiElementExists.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="26adcc88-5e5b-4ce8-9d03-92d4283b61a9" InformativeScreenshot="13ed83032eb42206d8c6115b9bfeabf4" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl id='ember*' tag='BUTTON' aaname='*Easy Apply*' class='jobs-apply-button artdeco-button artdeco-button--3 artdeco-button--primary ember-view' parentclass='jobs-apply-button--top-card' /&gt;&quot;, URL)]">
                                      <ui:Target.TimeoutMS>
                                        <InArgument x:TypeArguments="x:Int32" />
                                      </ui:Target.TimeoutMS>
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:UiElementExists.Target>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:UiElementExists>
                                <If sap2010:Annotation.AnnotationText="Check if The &quot;Easy Apply&quot; Button exist to detect if the job still exist and didn't expire  by checking the value of the &quot;JobExist&quot; variable" Condition="[JobExist]" DisplayName="If - &quot;Easy Apply&quot; Button exist" sap:VirtualizedContainerService.HintSize="1890,6712" sap2010:WorkflowViewState.IdRef="If_1">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="1603,6534" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="x:Boolean" Name="ProgressExist" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:GetValue ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get the text from the  company details SPAN in the page and save it to the &quot;CompanyName&quot; variable to use it in report" DisplayName="Get Text - company name and location SPAN" sap:VirtualizedContainerService.HintSize="1561,163" sap2010:WorkflowViewState.IdRef="GetValue_2">
                                        <ui:GetValue.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="f3b44a88-5375-462e-9a40-c80a5f36e195" InformativeScreenshot="1bb52b1a67ceacff8e2972ae3042ae4f" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl css-selector='body&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;span' tag='SPAN' /&gt;&quot;, URL)]">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:GetValue.Target>
                                        <ui:GetValue.Value>
                                          <OutArgument x:TypeArguments="x:String">[CompanyName]</OutArgument>
                                        </ui:GetValue.Value>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:GetValue>
                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" sap2010:Annotation.AnnotationText="Click the &quot;Easy Apply&quot; Button" ClickType="CLICK_SINGLE" DisplayName="Click - &quot;Easy Apply&quot; Button" sap:VirtualizedContainerService.HintSize="1561,137" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
                                        <ui:Click.CursorPosition>
                                          <ui:CursorPosition Position="Center">
                                            <ui:CursorPosition.OffsetX>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetX>
                                            <ui:CursorPosition.OffsetY>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:CursorPosition.OffsetY>
                                          </ui:CursorPosition>
                                        </ui:Click.CursorPosition>
                                        <ui:Click.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e2af972a-8856-430a-bcfb-967323e92dd4" InformativeScreenshot="1d15fc7f785dea946dc5c393485f74c8" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl id='ember*' tag='BUTTON' aaname='*Easy Apply*' class='jobs-apply-button artdeco-button artdeco-button--3 artdeco-button--primary ember-view' parentclass='jobs-apply-button--top-card' /&gt;&quot;, url)]" WaitForReady="COMPLETE">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                          </ui:Target>
                                        </ui:Click.Target>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:Click>
                                      <ui:UiElementExists sap2010:Annotation.AnnotationText="Check if &quot;Progress&quot; Span exist in the attached browser and save the result in the &quot;ProgressExist&quot; Boolean variable" DisplayName="Element Exists - &quot;Progress&quot; SPAN" Exists="[ProgressExist]" sap:VirtualizedContainerService.HintSize="1561,163" sap2010:WorkflowViewState.IdRef="UiElementExists_7">
                                        <ui:UiElementExists.Target>
                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8bed7e11-9414-48be-9104-0e1f89c1f4fc" InformativeScreenshot="2960267d4da86b02f714048097e7bab2" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl aria-role='note' tag='SPAN' css-selector='body&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;span' aaname='*%*' /&gt;&quot;, URL)]">
                                            <ui:Target.TimeoutMS>
                                              <InArgument x:TypeArguments="x:Int32" />
                                            </ui:Target.TimeoutMS>
                                            <ui:Target.WaitForReady>
                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                            </ui:Target.WaitForReady>
                                          </ui:Target>
                                        </ui:UiElementExists.Target>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:UiElementExists>
                                      <If sap2010:Annotation.AnnotationText="Check if The &quot;Progress&quot; Span exist to detect if the job require going through steps by checking the value of the &quot;ProgressExist&quot; variable" Condition="[ProgressExist]" DisplayName="If - &quot;Progress&quot; Exist" sap:VirtualizedContainerService.HintSize="1561,5189" sap2010:WorkflowViewState.IdRef="If_10">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <ui:InterruptibleWhile sap2010:Annotation.AnnotationText="Loop through the screens while progress IS NOT 100%" Condition="[Not progress.Trim.Equals(&quot;100%&quot;)]" DisplayName="While - Progress IS NOT 100%" sap:VirtualizedContainerService.HintSize="1182,5011" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                                            <ui:InterruptibleWhile.Body>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1146,4815" sap2010:WorkflowViewState.IdRef="Sequence_3">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:Boolean" Name="NextExist" />
                                                  <Variable x:TypeArguments="x:Boolean" Name="ReviewExist" />
                                                  <Variable x:TypeArguments="x:Boolean" Name="ResumeRequired" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <ui:UiElementExists sap2010:Annotation.AnnotationText="Check if &quot;Next&quot; Button exist in the attached browser and save the result in the &quot;NextExist&quot; Boolean variable" DisplayName="Element Exists - &quot;Next&quot; Button" Exists="[NextExist]" sap:VirtualizedContainerService.HintSize="1104,148" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
                                                  <ui:UiElementExists.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e3dded92-5b91-461f-a47f-39e145039935" InformativeScreenshot="a3aa6f3194caceb7d8ceb3ecde5ae660" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl id='ember*' tag='BUTTON' aaname='*Next*' innertext='*Next*' /&gt;&quot;, url)]" WaitForReady="COMPLETE">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                    </ui:Target>
                                                  </ui:UiElementExists.Target>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:UiElementExists>
                                                <If sap2010:Annotation.AnnotationText="Check if The &quot;Next&quot; Button exist to click it by checking the value of the &quot;NextExist&quot; variable" Condition="[NextExist]" DisplayName="If - &quot;Next&quot; Button exist" sap:VirtualizedContainerService.HintSize="1104,315" sap2010:WorkflowViewState.IdRef="If_2">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" sap2010:Annotation.AnnotationText="Click the &quot;Next&quot; Button" ClickType="CLICK_SINGLE" DisplayName="Click - &quot;Next&quot; Button" sap:VirtualizedContainerService.HintSize="334,137" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition Position="Center">
                                                          <ui:CursorPosition.OffsetX>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetX>
                                                          <ui:CursorPosition.OffsetY>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetY>
                                                        </ui:CursorPosition>
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6b441210-be19-4099-9abd-9b2c9273b321" InformativeScreenshot="7ccedcfd175e66f0c2bca9db7b0fbc6e" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl id='ember*' tag='BUTTON' aaname='*Next*' innertext='*Next*' /&gt;&quot;, url)]" WaitForReady="NONE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:Click>
                                                  </If.Then>
                                                  <If.Else>
                                                    <ui:Comment sap:VirtualizedContainerService.HintSize="334,55" sap2010:WorkflowViewState.IdRef="Comment_2" Text="Do Nothing" />
                                                  </If.Else>
                                                </If>
                                                <ui:UiElementExists sap2010:Annotation.AnnotationText="Check if &quot;Upload resume&quot; Button exist in the attached browser and save the result in the &quot;ResumeRequired&quot; Boolean variable" DisplayName="Element Exists - &quot;Upload resume&quot; Button" Exists="[ResumeRequired]" sap:VirtualizedContainerService.HintSize="1104,163" sap2010:WorkflowViewState.IdRef="UiElementExists_6">
                                                  <ui:UiElementExists.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e9b94d2e-5d39-4076-9547-3d9df1f76faf" InformativeScreenshot="a5a7f2367bdb2c31cde2941dddd5f8df" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl aria-role='button' tag='SPAN' aaname='*Upload resume*' /&gt;&quot;, URL)]">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:UiElementExists.Target>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:UiElementExists>
                                                <If sap2010:Annotation.AnnotationText="Check if The &quot;Upload resume&quot; Button exist to click it by checking the value of the &quot;ResumeRequired&quot; variable" Condition="[ResumeRequired]" DisplayName="If - &quot;Upload resume&quot; Button exist" sap:VirtualizedContainerService.HintSize="1104,915" sap2010:WorkflowViewState.IdRef="If_3">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="376,737" sap2010:WorkflowViewState.IdRef="Sequence_1">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" sap2010:Annotation.AnnotationText="Click &quot;Upload resume&quot; Button" ClickType="CLICK_SINGLE" DisplayName="Click - &quot;Upload resume&quot; Button" sap:VirtualizedContainerService.HintSize="334,137" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                        <ui:Click.CursorPosition>
                                                          <ui:CursorPosition Position="Center">
                                                            <ui:CursorPosition.OffsetX>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:CursorPosition.OffsetX>
                                                            <ui:CursorPosition.OffsetY>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:CursorPosition.OffsetY>
                                                          </ui:CursorPosition>
                                                        </ui:Click.CursorPosition>
                                                        <ui:Click.Target>
                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1d224b8b-c3da-4cbf-9fc0-fdf14047004c" InformativeScreenshot="e6689c8419b37e33670c914fc02d3489" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl aria-role='button' tag='SPAN' aaname='*Upload resume*' /&gt;&quot;, url)]">
                                                            <ui:Target.TimeoutMS>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:Target.TimeoutMS>
                                                            <ui:Target.WaitForReady>
                                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                                            </ui:Target.WaitForReady>
                                                          </ui:Target>
                                                        </ui:Click.Target>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:Click>
                                                      <ui:TypeInto AlterIfDisabled="{x:Null}" ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" Activate="True" sap2010:Annotation.AnnotationText="Type the resume path to the file name field in the upload file window for upload resume" DisplayName="Type Into - Upload resume file name the &quot;Resume Path&quot; " sap:VirtualizedContainerService.HintSize="334,176" sap2010:WorkflowViewState.IdRef="TypeInto_1" SimulateType="True" Text="C:\Mimo's Folders\Career\Mina Kamel 2023 RPA.pdf">
                                                        <ui:TypeInto.Target>
                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="0e54a855-3a6c-4bbe-a0ea-04dd2bd4f2b9" InformativeScreenshot="661df75615f29ee5dff55c7d33c80e10" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Open' /&gt;&lt;wnd ctrlid='1148' /&gt;&lt;wnd ctrlid='1148' /&gt;&lt;wnd ctrlid='1148' /&gt;">
                                                            <ui:Target.TimeoutMS>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:Target.TimeoutMS>
                                                            <ui:Target.WaitForReady>
                                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                                            </ui:Target.WaitForReady>
                                                          </ui:Target>
                                                        </ui:TypeInto.Target>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:TypeInto>
                                                      <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" sap2010:Annotation.AnnotationText="Click Open in the upload file window for upload resume" ClickType="CLICK_SINGLE" DisplayName="Click - &quot;Open&quot; Button" sap:VirtualizedContainerService.HintSize="334,148" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                                        <ui:Click.CursorPosition>
                                                          <ui:CursorPosition Position="Center">
                                                            <ui:CursorPosition.OffsetX>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:CursorPosition.OffsetX>
                                                            <ui:CursorPosition.OffsetY>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:CursorPosition.OffsetY>
                                                          </ui:CursorPosition>
                                                        </ui:Click.CursorPosition>
                                                        <ui:Click.Target>
                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="795742fa-d212-4133-928f-3a00d3f89b98" InformativeScreenshot="213232b5a3c8512a2f9ab7e73e5e8954" Selector="&lt;wnd app='chrome.exe' cls='#32770' title='Open' /&gt;&lt;wnd ctrlid='1' title='&amp;amp;Open' /&gt;">
                                                            <ui:Target.TimeoutMS>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:Target.TimeoutMS>
                                                            <ui:Target.WaitForReady>
                                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                                            </ui:Target.WaitForReady>
                                                          </ui:Target>
                                                        </ui:Click.Target>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:Click>
                                                      <ui:Continue sap2010:Annotation.AnnotationText="Skip the rest of current iteration checks and continue" sap:VirtualizedContainerService.HintSize="334,64" sap2010:WorkflowViewState.IdRef="Continue_1">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:Continue>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <ui:Comment sap:VirtualizedContainerService.HintSize="334,55" sap2010:WorkflowViewState.IdRef="Comment_3" Text="Do Nothing" />
                                                  </If.Else>
                                                </If>
                                                <ui:UiElementExists sap2010:Annotation.AnnotationText="Check if &quot;Error&quot; Span exist in the attached browser and save the result in the &quot;QuestionExist&quot; Boolean variable" DisplayName="Element Exists - &quot;Please enter a valid answer&quot; SPAN" Exists="[QuestionsExist]" sap:VirtualizedContainerService.HintSize="1104,148" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
                                                  <ui:UiElementExists.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="76cf088a-231b-4342-b72a-4a8993cadfd5" InformativeScreenshot="ca9233088ffd66a08a6fea193a8d655f" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl parentid='ember*' tag='SPAN' aaname='*Please enter a valid answer*' /&gt;&quot;, url)]" WaitForReady="COMPLETE">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                    </ui:Target>
                                                  </ui:UiElementExists.Target>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:UiElementExists>
                                                <If sap2010:Annotation.AnnotationText="Check if Errors exist to determine if there is unanswered questions to answer it by checking the value of the &quot;QuestionsExist&quot; variable" Condition="[QuestionsExist]" DisplayName="If - &quot;Questions&quot; exist" sap:VirtualizedContainerService.HintSize="1104,2073" sap2010:WorkflowViewState.IdRef="If_4">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <Sequence sap:VirtualizedContainerService.HintSize="725,1895" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="JobQuestions" />
                                                        <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="JobOptions" />
                                                        <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="JobSelects" />
                                                        <Variable x:TypeArguments="x:Boolean" Name="UnAnsweredFields" />
                                                      </Sequence.Variables>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <ui:FindChildren sap2010:Annotation.AnnotationText="Find &quot;Text&quot; Inputs in the Form Tag and save them in &quot;JobQuestions&quot; variable" Children="[JobQuestions]" DisplayName="Find Children - Questions Form &quot;Text&quot;" Filter="&lt;webctrl tag='INPUT' type='text'/&gt;" sap:VirtualizedContainerService.HintSize="683,148" sap2010:WorkflowViewState.IdRef="FindChildren_1" Scope="FIND_DESCENDANTS">
                                                        <ui:FindChildren.Target>
                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1646df4d-7aac-4b06-b4c1-d4088259e87c" InformativeScreenshot="631d2ba88831195e21cc3cb526671812" Selector="&lt;html app='chrome.exe' title='*LinkedIn*' /&gt;&lt;webctrl tag='FORM' parentclass='jobs-easy-apply-content' /&gt;">
                                                            <ui:Target.TimeoutMS>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:Target.TimeoutMS>
                                                            <ui:Target.WaitForReady>
                                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                                            </ui:Target.WaitForReady>
                                                          </ui:Target>
                                                        </ui:FindChildren.Target>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:FindChildren>
                                                      <ui:FindChildren sap2010:Annotation.AnnotationText="Find &quot;Fieldset&quot; Inputs in the Form Tag and save them in &quot;JobOptions&quot; variable" Children="[JobOptions]" DisplayName="Find Children - Questions Form &quot;Fieldset&quot;" Filter="&lt;webctrl tag='FIELDSET'/&gt;" sap:VirtualizedContainerService.HintSize="683,148" sap2010:WorkflowViewState.IdRef="FindChildren_2" Scope="FIND_DESCENDANTS">
                                                        <ui:FindChildren.Target>
                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1646df4d-7aac-4b06-b4c1-d4088259e87c" InformativeScreenshot="631d2ba88831195e21cc3cb526671812" Selector="&lt;html app='chrome.exe' title='*LinkedIn*' /&gt;&lt;webctrl tag='FORM' parentclass='jobs-easy-apply-content' /&gt;">
                                                            <ui:Target.TimeoutMS>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:Target.TimeoutMS>
                                                            <ui:Target.WaitForReady>
                                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                                            </ui:Target.WaitForReady>
                                                          </ui:Target>
                                                        </ui:FindChildren.Target>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:FindChildren>
                                                      <ui:FindChildren sap2010:Annotation.AnnotationText="Find &quot;Select&quot; Inputs in the Form Tag and save them in &quot;JobSelects&quot; variable" Children="[JobSelects]" DisplayName="Find Children - Questions Form &quot;Select&quot;" Filter="&lt;webctrl tag='SELECT'/&gt;" sap:VirtualizedContainerService.HintSize="683,148" sap2010:WorkflowViewState.IdRef="FindChildren_3" Scope="FIND_DESCENDANTS">
                                                        <ui:FindChildren.Target>
                                                          <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="1646df4d-7aac-4b06-b4c1-d4088259e87c" InformativeScreenshot="631d2ba88831195e21cc3cb526671812" Selector="&lt;html app='chrome.exe' title='*LinkedIn*' /&gt;&lt;webctrl tag='FORM' parentclass='jobs-easy-apply-content' /&gt;">
                                                            <ui:Target.TimeoutMS>
                                                              <InArgument x:TypeArguments="x:Int32" />
                                                            </ui:Target.TimeoutMS>
                                                            <ui:Target.WaitForReady>
                                                              <InArgument x:TypeArguments="ui:WaitForReady" />
                                                            </ui:Target.WaitForReady>
                                                          </ui:Target>
                                                        </ui:FindChildren.Target>
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                      </ui:FindChildren>
                                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke AnswerJobQuestions workflow" sap:VirtualizedContainerService.HintSize="683,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Linkedin\AnswerJobQuestions.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <InArgument x:TypeArguments="ui:Browser" x:Key="in_LinkedInBrowser">[LinkedInBrowser]</InArgument>
                                                          <InArgument x:TypeArguments="scg:IEnumerable(ui:UiElement)" x:Key="in_JobQuestions">[JobQuestions]</InArgument>
                                                          <InArgument x:TypeArguments="scg:IEnumerable(ui:UiElement)" x:Key="in_JobOptions">[JobOptions]</InArgument>
                                                          <InArgument x:TypeArguments="scg:IEnumerable(ui:UiElement)" x:Key="in_JobSelects">[JobSelects]</InArgument>
                                                          <OutArgument x:TypeArguments="x:Boolean" x:Key="out_UnAnsweredFields">[UnAnsweredFields]</OutArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                      </ui:InvokeWorkflowFile>
                                                      <If sap2010:Annotation.AnnotationText="Check if there is still unanswered questions by checking the &quot;UnAnsweredFields&quot; variable" Condition="[UnAnsweredFields]" DisplayName="If - There is unanswered questions" sap:VirtualizedContainerService.HintSize="683,1087" sap2010:WorkflowViewState.IdRef="If_7">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <If.Then>
                                                          <Sequence sap:VirtualizedContainerService.HintSize="376,909" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                                            <Sequence.Variables>
                                                              <Variable x:TypeArguments="ui:Image" Name="QuestionsImage" />
                                                            </Sequence.Variables>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                            <ui:TakeScreenshot WaitBefore="{x:Null}" sap2010:Annotation.AnnotationText="Take a screenshot of the browser window using the &quot;LinkedInBrowser&quot; variable as target and save the screenshot in &quot;QuestionsImage&quot; variable" DisplayName="Take Screenshot - Of the Browser" sap:VirtualizedContainerService.HintSize="334,125" sap2010:WorkflowViewState.IdRef="TakeScreenshot_1" Screenshot="[QuestionsImage]">
                                                              <ui:TakeScreenshot.Target>
                                                                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" Element="[LinkedInBrowser]" Id="1dd70ada-4cf0-4cb3-a35a-c0d18f2daf1e">
                                                                  <ui:Target.TimeoutMS>
                                                                    <InArgument x:TypeArguments="x:Int32" />
                                                                  </ui:Target.TimeoutMS>
                                                                  <ui:Target.WaitForReady>
                                                                    <InArgument x:TypeArguments="ui:WaitForReady" />
                                                                  </ui:Target.WaitForReady>
                                                                </ui:Target>
                                                              </ui:TakeScreenshot.Target>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:TakeScreenshot>
                                                            <ui:CreateDirectory ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Create a folder with the path of &quot;EasyApplyJobsQuestions/ [Current Job Name]&quot;" DisplayName="Create Folder - For unanswered questions screenshots" sap:VirtualizedContainerService.HintSize="334,121" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[&quot;EasyApplyJobsQuestions\&quot;+JobDetail.SpecificContent(&quot;Job Title&quot;).ToString]">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:CreateDirectory>
                                                            <ui:SaveImage sap2010:Annotation.AnnotationText="Save the &quot;QuestionsImage&quot; Image variable into the created folder" DisplayName="Save Image - &quot;QuestionsImage&quot;" FileName="[&quot;EasyApplyJobsQuestions\&quot;+JobDetail.SpecificContent(&quot;Job Title&quot;).ToString+&quot;\&quot;+Now.ToShortDateString.Replace(&quot;/&quot;,&quot;&quot;)+&quot;_&quot; + Now.ToLongTimeString.Replace(&quot;:&quot;,&quot;&quot;)+&quot;.jpg&quot;]" sap:VirtualizedContainerService.HintSize="334,134" sap2010:WorkflowViewState.IdRef="SaveImage_1" Image="[QuestionsImage]">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:SaveImage>
                                                            <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Add the datarow with Job Title URL and Failure reason to &quot;FailureReportDataTable&quot;" ArrayRow="[{JobDetail.SpecificContent(&quot;Job Title&quot;).ToString, JobDetail.SpecificContent(&quot;URL&quot;), &quot;Questions&quot;}]" DataTable="[FailureReportDataTable]" DisplayName="Add Data Row - To &quot;FailureReportDataTable&quot;" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="AddDataRow_3">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:AddDataRow>
                                                            <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Set transaction status of &quot;JobDetail&quot; To &quot;Failed&quot; with the reason &quot;Questions&quot;" Details="Questions needs answers that weren't provided" DisplayName="Set Transaction Status - Of &quot;JobDetail&quot;" ErrorType="Business" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_1" Reason="Questions" Status="Failed" TransactionItem="[JobDetail]">
                                                              <ui:SetTransactionStatus.Analytics>
                                                                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                                              </ui:SetTransactionStatus.Analytics>
                                                              <ui:SetTransactionStatus.Output>
                                                                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                                              </ui:SetTransactionStatus.Output>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:SetTransactionStatus>
                                                            <ui:Break sap2010:Annotation.AnnotationText="Break of the current iteration since it won't succeed anymore" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="Break_1">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </ui:Break>
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <Assign sap2010:Annotation.AnnotationText="Assign &quot;QuestionsExist&quot; To False to complete the submit step later" DisplayName="Assign - &quot;QuestionsExist&quot;" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_3">
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Boolean">[QuestionsExist]</OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                            </Assign.Value>
                                                            <sap:WorkflowViewStateService.ViewState>
                                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                              </scg:Dictionary>
                                                            </sap:WorkflowViewStateService.ViewState>
                                                          </Assign>
                                                        </If.Else>
                                                      </If>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <ui:Comment sap:VirtualizedContainerService.HintSize="334,55" sap2010:WorkflowViewState.IdRef="Comment_4" Text="Do Nothing" />
                                                  </If.Else>
                                                </If>
                                                <ui:UiElementExists sap2010:Annotation.AnnotationText="Check if &quot;Review&quot; Button exist in the attached browser and save the result in the &quot;ReviewExist&quot; Boolean variable" DisplayName="Element Exists - &quot;Review&quot; Button" Exists="[ReviewExist]" sap:VirtualizedContainerService.HintSize="1104,163" sap2010:WorkflowViewState.IdRef="UiElementExists_5">
                                                  <ui:UiElementExists.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="76cf088a-231b-4342-b72a-4a8993cadfd5" InformativeScreenshot="4135ac6983e04c2947afb08f08ea0b70" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl id='ember*' tag='BUTTON' aaname='*Review*' /&gt;&quot;, url)]" WaitForReady="COMPLETE">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                    </ui:Target>
                                                  </ui:UiElementExists.Target>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:UiElementExists>
                                                <If sap2010:Annotation.AnnotationText="Check if The &quot;Review&quot; Button exist to click it by checking the value of the &quot;ReviewExist&quot; variable" Condition="[ReviewExist]" DisplayName="If - &quot;Review&quot; Button exist" sap:VirtualizedContainerService.HintSize="1104,315" sap2010:WorkflowViewState.IdRef="If_5">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <If.Then>
                                                    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" sap2010:Annotation.AnnotationText="Click &quot;Review&quot; Button" ClickType="CLICK_SINGLE" DisplayName="Click - &quot;Review&quot; Button" sap:VirtualizedContainerService.HintSize="334,137" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT">
                                                      <ui:Click.CursorPosition>
                                                        <ui:CursorPosition Position="Center">
                                                          <ui:CursorPosition.OffsetX>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetX>
                                                          <ui:CursorPosition.OffsetY>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:CursorPosition.OffsetY>
                                                        </ui:CursorPosition>
                                                      </ui:Click.CursorPosition>
                                                      <ui:Click.Target>
                                                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4c23bcb8-4210-43e1-9b42-cde5bbc1c542" InformativeScreenshot="6ff0a5a2987a8596250f462df9b40089" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl id='ember*' tag='BUTTON' aaname='*Review*' /&gt;&quot;, url)]" WaitForReady="NONE">
                                                          <ui:Target.TimeoutMS>
                                                            <InArgument x:TypeArguments="x:Int32" />
                                                          </ui:Target.TimeoutMS>
                                                        </ui:Target>
                                                      </ui:Click.Target>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                    </ui:Click>
                                                  </If.Then>
                                                  <If.Else>
                                                    <ui:Comment sap:VirtualizedContainerService.HintSize="334,55" sap2010:WorkflowViewState.IdRef="Comment_5" Text="Do Nothing" />
                                                  </If.Else>
                                                </If>
                                                <ui:GetValue ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Get the text from the  progress bar SPAN in the page and save it to the &quot;progress&quot; variable to use it in while loop to know when to end the loop" DisplayName="Get Text - &quot;Progress&quot; Span" sap:VirtualizedContainerService.HintSize="1104,163" sap2010:WorkflowViewState.IdRef="GetValue_1">
                                                  <ui:GetValue.Target>
                                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4559d573-c5e4-4829-9aeb-501720b9c9a9" InformativeScreenshot="23fe38fb7a382056f0bc5cd326c32899" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl aria-role='note' tag='SPAN' css-selector='body&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;div&amp;gt;span' aaname='*%*' /&gt;&quot;, URL)]">
                                                      <ui:Target.TimeoutMS>
                                                        <InArgument x:TypeArguments="x:Int32" />
                                                      </ui:Target.TimeoutMS>
                                                      <ui:Target.WaitForReady>
                                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                                      </ui:Target.WaitForReady>
                                                    </ui:Target>
                                                  </ui:GetValue.Target>
                                                  <ui:GetValue.Value>
                                                    <OutArgument x:TypeArguments="x:String">[progress]</OutArgument>
                                                  </ui:GetValue.Value>
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                </ui:GetValue>
                                              </Sequence>
                                            </ui:InterruptibleWhile.Body>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InterruptibleWhile>
                                        </If.Then>
                                        <If.Else>
                                          <ui:Comment sap:VirtualizedContainerService.HintSize="334,55" sap2010:WorkflowViewState.IdRef="Comment_9" Text="Do Nothing" />
                                        </If.Else>
                                      </If>
                                      <If sap2010:Annotation.AnnotationText="Check if there is no more unanswered questions by checking the &quot;QuestionsExist&quot; variable" Condition="[Not QuestionsExist]" DisplayName="If - No unanswered questions exist" sap:VirtualizedContainerService.HintSize="1561,630" sap2010:WorkflowViewState.IdRef="If_6">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,452" sap2010:WorkflowViewState.IdRef="Sequence_4">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" sap2010:Annotation.AnnotationText="Click the &quot;Submit application&quot; Button" ClickType="CLICK_SINGLE" DisplayName="Click - &quot;Submit application&quot; Button" sap:VirtualizedContainerService.HintSize="334,137" sap2010:WorkflowViewState.IdRef="Click_6" KeyModifiers="None" MouseButton="BTN_LEFT">
                                              <ui:Click.CursorPosition>
                                                <ui:CursorPosition Position="Center">
                                                  <ui:CursorPosition.OffsetX>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:CursorPosition.OffsetX>
                                                  <ui:CursorPosition.OffsetY>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:CursorPosition.OffsetY>
                                                </ui:CursorPosition>
                                              </ui:Click.CursorPosition>
                                              <ui:Click.Target>
                                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="bf28043d-9831-462b-9ecf-181edd6c3b62" InformativeScreenshot="6ad384c19570ec88e95627615ac9ce15" Selector="[string.Format(&quot;&lt;html app='chrome.exe' url='{0}' /&gt;&lt;webctrl id='ember*' tag='BUTTON' aaname='*Submit application*' /&gt;&quot;, url)]" WaitForReady="COMPLETE">
                                                  <ui:Target.TimeoutMS>
                                                    <InArgument x:TypeArguments="x:Int32" />
                                                  </ui:Target.TimeoutMS>
                                                </ui:Target>
                                              </ui:Click.Target>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:Click>
                                            <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Add the datarow with Job Title URL and Date to &quot;SuccessReportDataTable&quot;" ArrayRow="[{JobDetail.SpecificContent(&quot;Job Title&quot;).ToString, JobDetail.SpecificContent(&quot;URL&quot;), CompanyName, Now.ToLongDateString}]" DataTable="[SuccessReportDataTable]" DisplayName="Add Data Row - To &quot;SuccessReportDataTable&quot;" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="AddDataRow_4">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:AddDataRow>
                                            <ui:SetTransactionStatus ContinueOnError="{x:Null}" Reason="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Set transaction status of &quot;JobDetail&quot; To &quot;Successful&quot;" DisplayName="Set Transaction Status - Of &quot;JobDetail&quot; To &quot;Successful&quot;" ErrorType="Business" sap:VirtualizedContainerService.HintSize="334,64" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_2" Status="Successful" TransactionItem="[JobDetail]">
                                              <ui:SetTransactionStatus.Analytics>
                                                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                              </ui:SetTransactionStatus.Analytics>
                                              <ui:SetTransactionStatus.Output>
                                                <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                              </ui:SetTransactionStatus.Output>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:SetTransactionStatus>
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <ui:Comment sap:VirtualizedContainerService.HintSize="334,55" sap2010:WorkflowViewState.IdRef="Comment_6" Text="Do Nothing" />
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="242,290" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Add the datarow with Job Title URL and Failure reason to &quot;FailureReportDataTable&quot;" ArrayRow="[{JobDetail.SpecificContent(&quot;Job Title&quot;).ToString, JobDetail.SpecificContent(&quot;URL&quot;), &quot;Job Not Available&quot;}]" DataTable="[FailureReportDataTable]" DisplayName="Add Data Row - To &quot;FailureReportDataTable&quot;" sap:VirtualizedContainerService.HintSize="200,79" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:AddDataRow>
                                      <ui:SetTransactionStatus ContinueOnError="{x:Null}" ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Set transaction status of &quot;JobDetail&quot; To &quot;Failed&quot; with the reason &quot;Not Available&quot;" Details="The Job is not available anymore on LinkedIn" DisplayName="Set Transaction Status - Of &quot;JobDetail&quot; To &quot;Failed&quot;" ErrorType="Business" sap:VirtualizedContainerService.HintSize="200,79" sap2010:WorkflowViewState.IdRef="SetTransactionStatus_3" Reason="Not Available" Status="Failed" TransactionItem="[JobDetail]">
                                        <ui:SetTransactionStatus.Analytics>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                        </ui:SetTransactionStatus.Analytics>
                                        <ui:SetTransactionStatus.Output>
                                          <scg:Dictionary x:TypeArguments="x:String, InArgument" />
                                        </ui:SetTransactionStatus.Output>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:SetTransactionStatus>
                                    </Sequence>
                                  </If.Else>
                                </If>
                                <If sap2010:Annotation.AnnotationText="Check if there is failed jobs by checking the count of rows in &quot;FailureReportDataTable&quot; variable to be more than 0" Condition="[FailureReportDataTable.Rows.Count&gt;0]" DisplayName="If - There is Failed Jobs" sap:VirtualizedContainerService.HintSize="1890,335" sap2010:WorkflowViewState.IdRef="If_8">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <ui:AppendRange sap2010:Annotation.AnnotationText="Appened the &quot;FailureReportDataTable&quot; To the &quot;Failed&quot; sheet in the &quot;EasyJobsReport.xlsx&quot; Excel sheet" DataTable="[FailureReportDataTable]" DisplayName="Append Range - &quot;FailureReportDataTable&quot; To &quot;Failed&quot;" sap:VirtualizedContainerService.HintSize="334,157" sap2010:WorkflowViewState.IdRef="AppendRange_2" SheetName="Failed" WorkbookPath="EasyJobsReport.xlsx">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AppendRange>
                                  </If.Then>
                                  <If.Else>
                                    <ui:Comment sap:VirtualizedContainerService.HintSize="334,55" sap2010:WorkflowViewState.IdRef="Comment_7" Text="Do Nothing" />
                                  </If.Else>
                                </If>
                                <If sap2010:Annotation.AnnotationText="Check if there is succeed jobs by checking the count of rows in &quot;SuccessReportDataTable&quot; variable to be more than 0" Condition="[SuccessReportDataTable.Rows.Count&gt;0]" DisplayName="If - There is Succeed Jobs" sap:VirtualizedContainerService.HintSize="1890,350" sap2010:WorkflowViewState.IdRef="If_9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <ui:AppendRange sap2010:Annotation.AnnotationText="Appened the &quot;SuccessReportDataTable&quot; To the &quot;Succeed&quot; sheet in the &quot;EasyJobsReport.xlsx&quot; Excel sheet" DataTable="[SuccessReportDataTable]" DisplayName="Append Range - &quot;SuccessReportDataTable&quot; To &quot;Succeed&quot;" sap:VirtualizedContainerService.HintSize="334,172" sap2010:WorkflowViewState.IdRef="AppendRange_3" SheetName="Succeed" WorkbookPath="EasyJobsReport.xlsx">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:AppendRange>
                                  </If.Then>
                                  <If.Else>
                                    <ui:Comment sap:VirtualizedContainerService.HintSize="334,55" sap2010:WorkflowViewState.IdRef="Comment_8" Text="Do Nothing" />
                                  </If.Else>
                                </If>
                              </Sequence>
                            </ActivityAction>
                          </ui:BrowserScope.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:BrowserScope>
                        <FlowStep.Next>
                          <x:Reference>__ReferenceID0</x:Reference>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.True>
                <FlowDecision.False>
                  <FlowStep x:Name="__ReferenceID3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">370,609</av:Point>
                        <av:Size x:Key="ShapeSize">200,94</av:Size>
                        <av:PointCollection x:Key="ConnectorLocation">470,703 470,764.5</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Add the datarow with total jobs count succeed jobs count and failed jobs count to &quot;ReportDataTable&quot;" ArrayRow="[{JobsCount,SucceedJobsCount,FailedJobsCount}]" DataTable="[ReportDataTable]" DisplayName="Add Data Row - To &quot;ReportDataTable&quot;" sap:VirtualizedContainerService.HintSize="200,94" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:AddDataRow>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">370,764.5</av:Point>
                            <av:Size x:Key="ShapeSize">200,108</av:Size>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:WriteRange AddHeaders="True" sap2010:Annotation.AnnotationText="Write the &quot;ReportDataTable&quot; to &quot;EasyJobReport.xlsx&quot; Excel sheet" DataTable="[ReportDataTable]" DisplayName="Write Range - To &quot;EasyJobReport.xlsx&quot;" sap:VirtualizedContainerService.HintSize="200,108" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Totals" StartingCell="A1" WorkbookPath="EasyJobsReport.xlsx">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:WriteRange>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.False>
              </FlowDecision>
            </FlowStep.Next>
          </FlowStep>
          <x:Reference>__ReferenceID1</x:Reference>
          <x:Reference>__ReferenceID2</x:Reference>
          <FlowStep x:Name="__ReferenceID6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">200,154.5</av:Point>
                <av:Size x:Key="ShapeSize">200,123</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">300,277.5 300,339</av:PointCollection>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:BuildDataTable sap2010:Annotation.AnnotationText="Build the report datatable that will be used to generate the report Excel sheet and save it to &quot;ReportDataTable&quot; variable" DataTable="[ReportDataTable]" DisplayName="Build Data Table - &quot;ReportDataTable&quot;" sap:VirtualizedContainerService.HintSize="200,123" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Total_x0020_number_x0020_of_x0020_jobs&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Succeed&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Failed&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:BuildDataTable>
            <FlowStep.Next>
              <x:Reference>__ReferenceID0</x:Reference>
            </FlowStep.Next>
          </FlowStep>
          <x:Reference>__ReferenceID3</x:Reference>
          <x:Reference>__ReferenceID4</x:Reference>
          <x:Reference>__ReferenceID5</x:Reference>
        </Flowchart>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="732,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="376,437" sap2010:WorkflowViewState.IdRef="Sequence_13">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage sap2010:Annotation.AnnotationText="Log the unknown error message and its source" DisplayName="Log Message - [Error] Unknown Exception" sap:VirtualizedContainerService.HintSize="334,122" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;Something Went Wrong: &quot; + exception.Source + vbCrLf+ exception.Message]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:LogMessage>
              <ui:CloseTab sap2010:Annotation.AnnotationText="Close the Browser for clean termination of the process" Browser="[LinkedInBrowser]" DisplayName="Close Tab - LinkedIn" sap:VirtualizedContainerService.HintSize="334,64" sap2010:WorkflowViewState.IdRef="CloseTab_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CloseTab>
              <TerminateWorkflow sap2010:Annotation.AnnotationText="Terminate the Workflow since this is a vital step for the rest of the automation" DisplayName="Terminate Workflow" Exception="[exception]" sap:VirtualizedContainerService.HintSize="334,79" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </TerminateWorkflow>
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>